#! <?xml version="1.0" encoding="UTF-8" ?>
#! <WORKSPACE
#    Command-line to run this workspace:
#        /opt/fme-desktop-2018/fme /home/justin/Documents/waterFlow/fmeWorkspaces/usgs/usgsgaugeRunner.fmw
#              --SourceDataset_POSTGRES "flowdb"
#    
#!   ATTR_TYPE_ENCODING="SDF"
#!   BEGIN_PYTHON=""
#!   BEGIN_TCL=""
#!   CATEGORY=""
#!   DESCRIPTION=""
#!   DESTINATION="NONE"
#!   DESTINATION_ROUTING_FILE=""
#!   DOC_EXTENTS="2119.01 870.011"
#!   DOC_TOP_LEFT="66.9997 -778.008"
#!   END_PYTHON=""
#!   END_TCL=""
#!   EXPLICIT_BOOKMARK_ORDER="false"
#!   FME_BUILD_NUM="18295"
#!   FME_DOCUMENT_GUID="1e10fbf2-784e-471d-966a-7c1b339c64a0"
#!   FME_DOCUMENT_PRIORGUID="6a8a58ff-aa48-447f-918e-041f3c6b6a78,d995272e-6082-43fb-ae8f-3606102ec329,9c60b74a-f1f5-4d5b-9e82-67cbbd53e0c2,793b1931-7bb7-4be0-a73d-b82e144df105,2b3f9fa2-ff6d-418e-a251-4fb46d95a732,592014e3-aeb5-496c-ae0c-8f6ad2b697e9,9cedd2cc-62af-4d7d-bd01-0058028eae56,50a179c3-2dcd-40f3-8a3c-b45416725eff,ebc77538-5f02-4c1a-a5e5-71c3e2e4d87a,bb78b95e-a180-4048-82d3-a8d3615f99e8,c22e2b61-639b-4891-ab44-edba77ee94ad,ccb01e17-b0a1-499b-89a0-62a22a0144ad"
#!   FME_GEOMETRY_HANDLING="Enhanced"
#!   FME_IMPLICIT_CSMAP_REPROJECTION_MODE="Auto"
#!   FME_REPROJECTION_ENGINE="FME"
#!   FME_SERVER_SERVICES=""
#!   FME_STROKE_MAX_DEVIATION="0"
#!   HISTORY=""
#!   IGNORE_READER_FAILURE="No"
#!   LAST_SAVE_BUILD="FME(R) 2018.0.0.1 (20180328 - Build 18295 - linux-x64)"
#!   LAST_SAVE_DATE="2018-08-01T15:16:44"
#!   LOG_FILE=""
#!   LOG_MAX_RECORDED_FEATURES="200"
#!   MARKDOWN_DESCRIPTION=""
#!   MARKDOWN_USAGE=""
#!   MAX_LOG_FEATURES="200"
#!   MULTI_WRITER_DATASET_ORDER="BY_ID"
#!   PASSWORD=""
#!   PYTHON_COMPATIBILITY="27"
#!   REDIRECT_TERMINATORS="NONE"
#!   SHOW_ANNOTATIONS="true"
#!   SHOW_INFO_NODES="true"
#!   SOURCE="NONE"
#!   SOURCE_ROUTING_FILE=""
#!   TERMINATE_REJECTED="YES"
#!   TITLE=""
#!   USAGE=""
#!   USE_MARKDOWN=""
#!   VIEW_POSITION="-72.0007 327.003"
#!   WARN_INVALID_XFORM_PARAM="Yes"
#!   WORKSPACE_VERSION="1"
#!   ZOOM_SCALE="100"
#! >
#! <DATASETS>
#! <DATASET
#!   IS_SOURCE="true"
#!   ROLE="READER"
#!   FORMAT="POSTGRES"
#!   DATASET="$(SourceDataset_POSTGRES)"
#!   KEYWORD="POSTGRES_1"
#!   MULTI_GEOM_ALLOWED="false"
#!   ATTR_MAX_LENGTH="0"
#!   ATTR_CASE="ANY"
#!   ALLOWED_FEAT_TYPES=""
#!   WRITE_DEFS="true"
#!   DEFLINE_TEMPLATE="postgres_type {FME_GEN_GEOMETRY} postgres_sql_where_clause &quot;&quot; postgres_sql_statement &quot;&quot;"
#!   DEFLINE_ATTRS="true"
#!   EXPOSABLE_ATTRS="fme_secondary_axis float8 multi_reader_keyword char(50) multi_reader_type char(50) fme_text_string char(50) fme_text_size float8 fme_geometry char(50) fme_type char(50) fme_dataset char(50) fme_feature_type char(50) fme_fill_color char(50) fme_color char(50) fme_start_angle float8 multi_reader_full_id int4 fme_sweep_angle float8 fme_rotation float8 fme_primary_axis float8 postgres_type char(50) fme_basename char(50) multi_reader_id int4 postgres_oid int4"
#!   DEFLINE_PARMS="&quot;GUI OPTIONAL NAMEDGROUP postgres_query_settings_group postgres_sql_where_clause%postgres_sql_statement Table&quot; &quot;&quot; &quot;GUI OPTIONAL TEXT_EDIT_SQL_CFG postgres_sql_where_clause MODE,WHERE;FORMAT,POSTGRES WHERE Clause&quot; &quot;&quot; &quot;GUI OPTIONAL TEXT_EDIT_SQL_CFG postgres_sql_statement MODE,SQL;FORMAT,POSTGRES SELECT Statement&quot; &quot;&quot; "
#!   ATTR_INDEX_TYPES="BTree RTree Hash PrimaryKey"
#!   ATTR_NAME_INVALID_CHARS=""
#!   SUPPORTS_FEATURE_TYPE_FANOUT="true"
#!   ENABLED="true"
#!   DYNAMIC_FEATURE_TYPES_LIST_ON_MERGE="true"
#!   DATASET_TYPE="DATABASE"
#!   GENERATE_FME_BUILD_NUM="18295"
#!   COORDSYS=""
#!   FEATURE_TYPES=""
#!   MAX_FEATURES=""
#!   MAX_FEATURES_PER_FEATURE_TYPE=""
#!   MIN_FEATURES=""
#!   START_FEATURE=""
#! >
#! <METAFILE_PARAMETER
#!   NAME="ADVANCED_PARMS"
#!   VALUE="POSTGRES_IN_FEATURES_PER_FETCH POSTGRES_IN_BEGIN_SQL POSTGRES_IN_END_SQL POSTGRES_OUT_BULK_COPY POSTGRES_OUT_TRANSACTION_INTERVAL POSTGRES_OUT_BEGIN_SQL POSTGRES_OUT_END_SQL"
#! />
#! <METAFILE_PARAMETER
#!   NAME="ATTRIBUTE_READING"
#!   VALUE="DEFLINE_ATTRS"
#! />
#! <METAFILE_PARAMETER
#!   NAME="ATTRIBUTE_READING_HISTORIC"
#!   VALUE="ALL"
#! />
#! <METAFILE_PARAMETER
#!   NAME="DATASET_NAME"
#!   VALUE="Database"
#! />
#! <METAFILE_PARAMETER
#!   NAME="FEATURE_TYPE_DEFAULT_NAME"
#!   VALUE="Table1"
#! />
#! <METAFILE_PARAMETER
#!   NAME="FEATURE_TYPE_NAME"
#!   VALUE="Table"
#! />
#! <METAFILE_PARAMETER
#!   NAME="NETWORK_AUTHENTICATION"
#!   VALUE="NO"
#! />
#! <METAFILE_PARAMETER
#!   NAME="NETWORK_PROXY"
#!   VALUE="NO"
#! />
#! <METAFILE_PARAMETER
#!   NAME="PARAMS_TO_NOT_PROPAGATE_ON_INSPECT"
#!   VALUE="BEGIN_SQL{0} END_SQL{0}"
#! />
#! <METAFILE_PARAMETER
#!   NAME="SUPPORTS_SCHEMA_IN_FEATURE_TYPE_NAME"
#!   VALUE="YES"
#! />
#! </DATASET>
#! </DATASETS>
#! <DATA_TYPES>
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="bool"
#!   FME_TYPE="fme_boolean"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="char(width)"
#!   FME_TYPE="fme_char(width)"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="varchar(width)"
#!   FME_TYPE="fme_varchar(width)"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="text"
#!   FME_TYPE="fme_buffer"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="xml"
#!   FME_TYPE="fme_xml"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="json"
#!   FME_TYPE="fme_json"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="jsonb"
#!   FME_TYPE="fme_json"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="bytea"
#!   FME_TYPE="fme_binarybuffer"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="bytea"
#!   FME_TYPE="fme_varbinary(width)"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="bytea"
#!   FME_TYPE="fme_binary(width)"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="int2"
#!   FME_TYPE="fme_int16"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="int2"
#!   FME_TYPE="fme_int8"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="int2"
#!   FME_TYPE="fme_uint8"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="int4"
#!   FME_TYPE="fme_int32"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="int4"
#!   FME_TYPE="fme_uint16"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="int8"
#!   FME_TYPE="fme_int64"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="int8"
#!   FME_TYPE="fme_uint32"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="numeric(width,decimal)"
#!   FME_TYPE="fme_decimal(width,decimal)"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="numeric(20,0)"
#!   FME_TYPE="fme_uint64"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="oid"
#!   FME_TYPE="fme_uint32"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="serial"
#!   FME_TYPE="fme_int32"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="float4"
#!   FME_TYPE="fme_real32"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="money"
#!   FME_TYPE="fme_real32"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="float8"
#!   FME_TYPE="fme_real64"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="date"
#!   FME_TYPE="fme_date"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="time"
#!   FME_TYPE="fme_time"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="timetz"
#!   FME_TYPE="fme_time"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="timestamp"
#!   FME_TYPE="fme_datetime"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="timestamptz"
#!   FME_TYPE="fme_datetime"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="uuid"
#!   FME_TYPE="fme_buffer"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="bit(width)"
#!   FME_TYPE="fme_char(width)"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="varbit"
#!   FME_TYPE="fme_buffer"
#!   FORMAT="POSTGRES"
#! />
#! <DATA_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="varbit(width)"
#!   FME_TYPE="fme_varchar(width)"
#!   FORMAT="POSTGRES"
#! />
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_no_geom"
#!   FORMAT="POSTGRES"
#! />
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_point"
#!   FORMAT="POSTGRES"
#! />
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_line"
#!   FORMAT="POSTGRES"
#! />
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_area"
#!   FORMAT="POSTGRES"
#! />
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_rectangle"
#!   FORMAT="POSTGRES"
#! />
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_rounded_rectangle"
#!   FORMAT="POSTGRES"
#! />
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_text"
#!   FORMAT="POSTGRES"
#! />
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_ellipse"
#!   FORMAT="POSTGRES"
#! />
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_arc"
#!   FORMAT="POSTGRES"
#! />
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_collection"
#!   FORMAT="POSTGRES"
#! />
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_raster"
#!   FORMAT="POSTGRES"
#! />
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_surface"
#!   FORMAT="POSTGRES"
#! />
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_solid"
#!   FORMAT="POSTGRES"
#! />
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_point_cloud"
#!   FORMAT="POSTGRES"
#! />
#! <GEOM_TYPE
#!   IS_SOURCE="true"
#!   FORMAT_TYPE="postgres_none"
#!   FME_TYPE="fme_feature_table"
#!   FORMAT="POSTGRES"
#! />
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! <FEATURE_TYPE
#!   IS_SOURCE="true"
#!   NODE_NAME="public.gauge"
#!   FEATURE_TYPE_NAME=""
#!   FEATURE_TYPE_NAME_QUALIFIER=""
#!   IS_EDITABLE="false"
#!   IDENTIFIER="12"
#!   FEAT_GEOMTYPE="postgres_none"
#!   POSITION="66.999669996699964 92.0032700327003"
#!   BOUNDING_RECT="66.999669996699964 92.0032700327003 -1 -1"
#!   ORDER="500000000000000"
#!   COLLAPSED="true"
#!   KEYWORD="POSTGRES_1"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   HIDDEN_USER_ATTRS=""
#!   READ_SELECT_ATTRS="true"
#!   MERGE_FILTER=""
#!   MERGE_FILTER_TYPE="FILTER_TYPE_GLOB"
#!   MERGE_FILTER_CASE_SENSITIVE="false"
#!   DYNAMIC_SCHEMA="false"
#! >
#!     <FEAT_ATTRIBUTE ATTR_NAME="watersource" ATTR_TYPE="int4,BTree" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#!     <FEAT_ATTRIBUTE ATTR_NAME="datasource" ATTR_TYPE="varchar(10),BTree" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#!     <FEAT_ATTRIBUTE ATTR_NAME="name" ATTR_TYPE="varchar(100)" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#!     <FEAT_ATTRIBUTE ATTR_NAME="url" ATTR_TYPE="varchar(80)" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#!     <FEAT_ATTRIBUTE ATTR_NAME="watersourcename" ATTR_TYPE="varchar(80)" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#!     <FEAT_ATTRIBUTE ATTR_NAME="geom" ATTR_TYPE="" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#!     <FEAT_ATTRIBUTE ATTR_NAME="id" ATTR_TYPE="varchar(100),PrimaryKey" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#!     <FEAT_ATTRIBUTE ATTR_NAME="watershed" ATTR_TYPE="char(2)" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#!     <DEFLINE_PARM PARM_NAME="postgres_query_settings_group" PARM_VALUE=""/>
#!     <DEFLINE_PARM PARM_NAME="postgres_sql_statement" PARM_VALUE=""/>
#!     <DEFLINE_PARM PARM_NAME="postgres_sql_where_clause" PARM_VALUE=""/>
#! </FEATURE_TYPE>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI NAMED_DB_CONNECTION_ENCODED SourceDataset_POSTGRES FMT:POSTGRES%FAMILY:PostgreSQL Connection:"
#!   DEFAULT_VALUE="flowdb"
#!   IS_STAND_ALONE="false"
#! />
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#!   IDENTIFIER="3"
#!   TYPE="WorkspaceRunner"
#!   VERSION="3"
#!   POSITION="1392.0071400714012 -283.99477994779949"
#!   BOUNDING_RECT="1392.0071400714012 -283.99477994779949 -1 -1"
#!   ORDER="500000000000057"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18295"
#! >
#!     <OUTPUT_FEAT NAME="SUCCEEDED"/>
#!     <XFORM_ATTR ATTR_NAME="watersource" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="datasource" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="url" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="watersourcename" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="geom" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="id" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="watershed" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_count" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <XFORM_ATTR ATTR_NAME="watersource" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="datasource" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="name" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="url" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="watersourcename" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="geom" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="id" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="watershed" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_count" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_failure_message" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="SUMMARY"/>
#!     <XFORM_ATTR ATTR_NAME="_proc_count" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="_processes{}" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_PARM PARM_NAME="BLOCKING" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="MAX_PROC" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MAX_TO_BATCH" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETER_TYPES" PARM_VALUE="TEXT"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_FILE" PARM_VALUE="$(FME_MF_DIR)usgsgaugeReader.fmw"/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_PARAMETERS" PARM_VALUE="watershed,&lt;at&gt;Value&lt;openparen&gt;_count&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="WS_PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="WorkspaceRunner"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="5"
#!   TYPE="Logger"
#!   VERSION="4"
#!   POSITION="2186.0091200912007 -409.00054000540001"
#!   BOUNDING_RECT="2186.0091200912007 -409.00054000540001 -1 -1"
#!   ORDER="500000000000058"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18295"
#! >
#!     <OUTPUT_FEAT NAME="LOGGED"/>
#!     <XFORM_ATTR ATTR_NAME="_proc_count" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_processes{}" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="watersource" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="datasource" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="url" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="watersourcename" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="geom" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="id" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="watershed" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_count" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_failure_message" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="FEATURE_TYPE" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="LOG_FEATURE" PARM_VALUE="LOG_ONLY"/>
#!     <XFORM_PARM PARM_NAME="MAXCOORDS" PARM_VALUE="20"/>
#!     <XFORM_PARM PARM_NAME="MAXFEATS" PARM_VALUE="20"/>
#!     <XFORM_PARM PARM_NAME="MESSAGE" PARM_VALUE="Feature is:"/>
#!     <XFORM_PARM PARM_NAME="MSG_GRP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SEVERITY" PARM_VALUE="INFO"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Logger"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="10"
#!   TYPE="Counter"
#!   VERSION="2"
#!   POSITION="72.00072000720013 -778.0077800778007"
#!   BOUNDING_RECT="72.00072000720013 -778.0077800778007 -1 -1"
#!   ORDER="500000000000060"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18295"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="watersource" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="datasource" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="url" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="watersourcename" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="geom" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="id" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="watershed" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_count" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="&lt;REJECTED&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="watersource" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="datasource" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="name" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="url" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="watersourcename" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="geom" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="id" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="watershed" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_count" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="CNT_ATTR" PARM_VALUE="_count"/>
#!     <XFORM_PARM PARM_NAME="DOMAIN" PARM_VALUE="counter"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SCOPE" PARM_VALUE="Global"/>
#!     <XFORM_PARM PARM_NAME="START" PARM_VALUE="1"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Counter"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="13"
#!   TYPE="StringPadder"
#!   VERSION="3"
#!   POSITION="685.99411994119941 -490.49702997029976"
#!   BOUNDING_RECT="685.99411994119941 -490.49702997029976 -1 -1"
#!   ORDER="500000000000061"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18295"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <XFORM_ATTR ATTR_NAME="watersource" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="datasource" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="url" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="watersourcename" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="geom" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="id" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="watershed" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_count" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="&lt;REJECTED&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="watersource" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="datasource" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="name" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="url" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="watersourcename" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="geom" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="id" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="watershed" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_count" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="BLANK_ATTRIBUTE" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="PADCHAR" PARM_VALUE="0"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SIDE" PARM_VALUE="Left"/>
#!     <XFORM_PARM PARM_NAME="SRC_ATTRS" PARM_VALUE="_count"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WIDTH" PARM_VALUE="2"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringPadder"/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#!   IDENTIFIER="16"
#!   SOURCE_NODE="12"
#!   TARGET_NODE="10"
#!   SOURCE_PORT_DESC="-1"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="6"
#!   SOURCE_NODE="3"
#!   TARGET_NODE="5"
#!   SOURCE_PORT_DESC="fo 0 SUCCEEDED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="14"
#!   SOURCE_NODE="10"
#!   TARGET_NODE="13"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="15"
#!   SOURCE_NODE="13"
#!   TARGET_NODE="3"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="7"
#!   SOURCE_NODE="3"
#!   TARGET_NODE="5"
#!   SOURCE_PORT_DESC="fo 1 FAILED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="8"
#!   SOURCE_NODE="3"
#!   TARGET_NODE="5"
#!   SOURCE_PORT_DESC="fo 2 SUMMARY"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </WORKSPACE>
FME_PYTHON_VERSION 27
GUI IGNORE SourceDataset_POSTGRES_1,POSTGRES_IN_FME_CONNECTION_GROUP_POSTGRES_1,POSTGRES_IN_FME_GROUP_NAMED1_POSTGRES_1,POSTGRES_IN_WHERE_CLAUSE_POSTGRES_1,POSTGRES_IN_ADVANCED_POSTGRES_1,POSTGRES_IN_FEATURES_PER_FETCH_POSTGRES_1,POSTGRES_IN_BEGIN_SQL_POSTGRES_1,POSTGRES_IN_END_SQL_POSTGRES_1,POSTGRES_IN_SCHEMAS_FOR_TABLE_LISTING_POSTGRES_1
DEFAULT_MACRO SourceDataset_POSTGRES flowdb
GUI NAMED_DB_CONNECTION_ENCODED SourceDataset_POSTGRES FMT:POSTGRES%FAMILY:PostgreSQL Connection:
INCLUDE [ if {{$(SourceDataset_POSTGRES)} == {}} { puts_real {Parameter 'SourceDataset_POSTGRES' must be given a value.}; exit 1; }; ]
#! START_HEADER
#! START_WB_HEADER
READER_TYPE MULTI_READER
MULTI_READER_TYPE{0} POSTGRES
MULTI_READER_KEYWORD{0} POSTGRES_1
MULTI_READER_GEN_DIRECTIVES{0} QUERY_FEATURE_TYPES_FOR_MERGE_FILTERS,Yes,NAMED_CONNECTION,flowdb,TABLELIST,public.gauge,WHERE_CLAUSE,datasource<lt>space<gt>=<lt>space<gt><lt>apos<gt>USGS<lt>apos<gt><lt>space<gt>LIMIT<lt>space<gt>21,BEGIN_SQL,,_MERGE_SCHEMAS,YES,FEATURES_PER_FETCH,10000,EXPOSE_ATTRS_GROUP,,POSTGRES_EXPOSE_FORMAT_ATTRS,,READ_TIME_WITH_TIMEZONE,Yes,SCHEMAS_FOR_TABLE_LISTING,,END_SQL,,ADVANCED,

WRITER_TYPE NULL
WRITER_KEYWORD NULL_DEST
NULL_DEST_DATASET null
#! END_WB_HEADER

#! START_WB_HEADER
MACRO WB_KEYWORD "POSTGRES_1"
#! END_WB_HEADER
#! START_SOURCE_HEADER POSTGRES POSTGRES_1
# The dataset this mapping file was generated from was:
#! END_SOURCE_HEADER
#! START_WB_HEADER
DEFAULT_MACRO SourceDataset
INCLUDE [ if {{$(SourceDataset)} != ""} {                        \
 puts {DEFAULT_MACRO SourceDataset_POSTGRES_1 $(SourceDataset)}     \
 } ]
#! END_WB_HEADER
#! START_SOURCE_HEADER POSTGRES POSTGRES_1
DEFAULT_MACRO SourceDataset_POSTGRES_1 $(SourceDataset_POSTGRES)
GUI NAMED_DB_CONNECTION_ENCODED SourceDataset_POSTGRES_1 FMT:POSTGRES Connection:
DEFAULT_MACRO POSTGRES_IN_QUERY_FEATURE_TYPES_FOR_MERGE_FILTERS_POSTGRES_1 Yes
POSTGRES_1_QUERY_FEATURE_TYPES_FOR_MERGE_FILTERS "$(POSTGRES_IN_QUERY_FEATURE_TYPES_FOR_MERGE_FILTERS_POSTGRES_1)"
DEFAULT_MACRO POSTGRES_IN_READ_TIME_WITH_TIMEZONE_POSTGRES_1 Yes
POSTGRES_1_READ_TIME_WITH_TIMEZONE "$(POSTGRES_IN_READ_TIME_WITH_TIMEZONE_POSTGRES_1)"
DEFAULT_MACRO POSTGRES_IN_FME_CONNECTION_GROUP_POSTGRES_1 
GUI OPTIONAL DISCLOSUREGROUP POSTGRES_IN_FME_CONNECTION_GROUP_POSTGRES_1 POSTGRES_IN_NAMED_CONNECTION%POSTGRES_IN_SCHEMAS_FOR_TABLE_LISTING_POSTGRES_1 Database Connection
DEFAULT_MACRO POSTGRES_IN_FME_GROUP_NAMED1_POSTGRES_1 
GUI OPTIONAL DISCLOSUREGROUP POSTGRES_IN_FME_GROUP_NAMED1_POSTGRES_1 POSTGRES_IN_TABLELIST%POSTGRES_IN_WHERE_CLAUSE_POSTGRES_1 Constraints
DEFAULT_MACRO POSTGRES_IN_WHERE_CLAUSE_POSTGRES_1 datasource<space>=<space><apos>USGS<apos><space>LIMIT<space>21
POSTGRES_1_WHERE_CLAUSE "$(POSTGRES_IN_WHERE_CLAUSE_POSTGRES_1)"
GUI OPTIONAL TEXT_EDIT_SQL_CFG POSTGRES_IN_WHERE_CLAUSE_POSTGRES_1 MODE,WHERE;FORMAT,POSTGRES WHERE Clause:
DEFAULT_MACRO POSTGRES_IN_EXPOSE_ATTRS_GROUP_POSTGRES_1 
POSTGRES_1_EXPOSE_ATTRS_GROUP "$(POSTGRES_IN_EXPOSE_ATTRS_GROUP_POSTGRES_1)"
DEFAULT_MACRO POSTGRES_IN_ADVANCED_POSTGRES_1 
GUI OPTIONAL DISCLOSUREGROUP POSTGRES_IN_ADVANCED_POSTGRES_1 POSTGRES_IN_FEATURES_PER_FETCH_POSTGRES_1%POSTGRES_IN_BEGIN_SQL_POSTGRES_1%POSTGRES_IN_END_SQL_POSTGRES_1 Advanced
DEFAULT_MACRO POSTGRES_IN_FEATURES_PER_FETCH_POSTGRES_1 10000
POSTGRES_1_FEATURES_PER_FETCH "$(POSTGRES_IN_FEATURES_PER_FETCH_POSTGRES_1)"
GUI FLOAT POSTGRES_IN_FEATURES_PER_FETCH_POSTGRES_1 Number Of Records To Fetch At A Time
DEFAULT_MACRO POSTGRES_IN_BEGIN_SQL_POSTGRES_1 
POSTGRES_1_BEGIN_SQL "$(POSTGRES_IN_BEGIN_SQL_POSTGRES_1)"
GUI OPTIONAL TEXT_EDIT_SQL_CFG POSTGRES_IN_BEGIN_SQL_POSTGRES_1 MODE,SQL;FORMAT,POSTGRES SQL To Run Before Read
DEFAULT_MACRO POSTGRES_IN_END_SQL_POSTGRES_1 
POSTGRES_1_END_SQL "$(POSTGRES_IN_END_SQL_POSTGRES_1)"
GUI OPTIONAL TEXT_EDIT_SQL_CFG POSTGRES_IN_END_SQL_POSTGRES_1 MODE,SQL;FORMAT,POSTGRES SQL To Run After Read
# ============================================================================ 
DEFAULT_MACRO POSTGRES_IN_ATTRIBUTE_READING_POSTGRES_1 DEFLINE_ATTRS
POSTGRES_1_ATTRIBUTE_READING "$(POSTGRES_IN_ATTRIBUTE_READING_POSTGRES_1)"
# ============================================================================ 
POSTGRES_1_GENERATE_FME_BUILD_NUM 18295
DEFAULT_MACRO POSTGRES_IN_SCHEMAS_FOR_TABLE_LISTING_POSTGRES_1 
GUI OPTIONAL TEXT POSTGRES_IN_SCHEMAS_FOR_TABLE_LISTING_POSTGRES_1 Schemas for Table Listing:
POSTGRES_1_SCHEMAS_FOR_TABLE_LISTING $(POSTGRES_IN_SCHEMAS_FOR_TABLE_LISTING_POSTGRES_1)
POSTGRES_1_DATASET "$(SourceDataset_POSTGRES_1)"
#! END_SOURCE_HEADER
#! START_WB_HEADER
#! END_WB_HEADER

#! END_HEADER

LOG_FILENAME "$(FME_MF_DIR)usgsgaugeRunner.log"
LOG_APPEND NO
LOG_MAX_FEATURES 200
LOG_MAX_RECORDED_FEATURES 200
FME_REPROJECTION_ENGINE FME
FME_IMPLICIT_CSMAP_REPROJECTION_MODE Auto
FME_GEOMETRY_HANDLING Enhanced
FME_STROKE_MAX_DEVIATION 0
LOG_FILTER_MASK -1
DEFAULT_MACRO DATASET_KEYWORD_POSTGRES_1 POSTGRES_1
# -------------------------------------------------------------------------

POSTGRES_1_READER_META_ATTRIBUTES fme_feature_type

# -------------------------------------------------------------------------

MULTI_READER_CONTINUE_ON_READER_FAILURE No

# -------------------------------------------------------------------------

MACRO WORKSPACE_NAME usgsgaugeRunner
MACRO FME_VIEWER_APP fmedatainspector
# -------------------------------------------------------------------------

FACTORY_DEF * RoutingFactory   FACTORY_NAME "Router and Unexpected Input Remover"   COMMAND_PARM_EVALUATION SINGLE_PASS   MULTI_READER_KEYWORD $(DATASET_KEYWORD_POSTGRES_1)   INPUT FEATURE_TYPE *    ROUTE POSTGRES POSTGRES_1::public.gauge multi_reader_keyword,$(DATASET_KEYWORD_POSTGRES_1) TO FME_GENERIC ::public.gauge ALIAS_GEOMETRY    MERGE_INPUT Yes   OUTPUT ROUTED FEATURE_TYPE *
POSTGRES_1_MERGE_DEF POSTGRES_1::public.gauge EXACT public.gauge DEFLINE postgres_type,postgres_none,postgres_sql_where_clause,,postgres_sql_statement,,watersource,int4<comma>BTree,datasource,varchar<openparen>10<closeparen><comma>BTree,name,varchar<openparen>100<closeparen>,url,varchar<openparen>80<closeparen>,watersourcename,varchar<openparen>80<closeparen>,id,varchar<openparen>100<closeparen><comma>PrimaryKey,watershed,char<openparen>2<closeparen>
# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory    FACTORY_NAME "public.gauge (POSTGRES_1) Splitter"    INPUT FEATURE_TYPE public.gauge    OUTPUT FEATURE_TYPE public.gauge_POSTGRES_1
DEFAULT_MACRO WB_CURRENT_CONTEXT
# -------------------------------------------------------------------------

# Create the DomainName that this transformer will use.
# Because @Count itself will evalute the expression to calculate the
# domain, we don't need to do anything in Tcl per feature going by

INCLUDE [    set domainPrefix {};    if { {Global} == {Local} }    {       set domainPrefix [FME_EncodeText {Counter_}];    };    puts "MACRO Counter_FULL_DOMAIN ${domainPrefix}counter"; ]
FACTORY_DEF * ExecuteFunctionFactory    FACTORY_NAME Counter_Rejector    INPUT  FEATURE_TYPE public.gauge_POSTGRES_1    FUNCTION_DEFINITION @Count(REJECTABLE_WITH_FLAG,fme_encoded,$(Counter_FULL_DOMAIN),"1")    RESULT_ATTRIBUTE "_count"    OUTPUT COMPLETE FEATURE_TYPE Counter_OUTPUT    OUTPUT REJECTED FEATURE_TYPE Counter_<REJECTED>

DEFAULT_MACRO _WB_BYPASS_TERMINATION No
FACTORY_DEF * TeeFactory FACTORY_NAME Counter_<Rejected> INPUT FEATURE_TYPE Counter_<REJECTED>  OUTPUT FAILED FEATURE_TYPE * @Abort(ENCODED, Counter<space>output<space>a<space><lt>Rejected<gt><space>feature.<space><space>To<space>continue<space>translation<space>when<space>features<space>are<space>rejected<comma><space>change<space><apos>Workspace<space>Parameters<apos><space><gt><space>Translation<space><gt><space><apos>Rejected<space>Feature<space>Handling<apos><space>to<space><apos>Continue<space>Translation<apos>)
# -------------------------------------------------------------------------

Tcl2 proc StringPadder_padder {width padChar} {    set attrs [split {_count} { }];    set funcName "PadLeft";    if { [string compare {LEFT} {RIGHT}] == 0 } {     set funcName "PadRight";    };    set parmList {{EvaluateExpression} {ATTR_SET_EXPR}};    set hasAttr 0;    foreach attr $attrs {     if {![FME_IsAttributeNull $attr]} {         set hasAttr 1;         set funcAttr $attr;         if { [string first "<quote>" $attr] != -1 }         {             set funcAttr [string map {"<quote>" "<backslash><quote>"} $attr];             append funcAttr "<quote>";             set funcAttr "<quote>"$funcAttr;         };         if { [string compare $padChar {<closeparen>}] == 0 } {             set padChar "<quote><closeparen><quote>";         } elseif { [string compare $padChar {<quote>}] == 0 } {             set padChar "<quote><backslash><quote><quote>";         } elseif { [string compare $padChar {<openparen>}] == 0 } {             set padChar "<quote><openparen><quote>";         };         set funcCall [join [list "<at>" $funcName "<openparen><at>Value<openparen>" $funcAttr "<closeparen><comma>" $width "<comma>" $padChar "<comma>TRUE<closeparen>"] {}];         lappend parmList $attr;         lappend parmList $funcCall;      };    };    if {$hasAttr > 0} {       lappend parmList {StringPadder};       eval FME_Execute $parmList;    }; }
FACTORY_DEF * TestFactory    FACTORY_NAME StringPadder_CheckWidth    INPUT  FEATURE_TYPE Counter_OUTPUT    TEST "2" TYPE NUM ENCODED    OUTPUT FAILED FEATURE_TYPE StringPadder_<REJECTED>       fme_rejection_code "INVALID_PARAMETER_DESIRED_STRING_LENGTH"    OUTPUT PASSED FEATURE_TYPE __toOutput__
FACTORY_DEF * TeeFactory    FACTORY_NAME StringPadder_StringPadder    INPUT FEATURE_TYPE __toOutput__    OUTPUT FEATURE_TYPE StringPadder_OUTPUT         @Tcl2("StringPadder_padder {2} {0} ")

DEFAULT_MACRO _WB_BYPASS_TERMINATION No
FACTORY_DEF * TeeFactory FACTORY_NAME StringPadder_<Rejected> INPUT FEATURE_TYPE StringPadder_<REJECTED>  OUTPUT FAILED FEATURE_TYPE * @Abort(ENCODED, StringPadder<space>output<space>a<space><lt>Rejected<gt><space>feature.<space><space>To<space>continue<space>translation<space>when<space>features<space>are<space>rejected<comma><space>change<space><apos>Workspace<space>Parameters<apos><space><gt><space>Translation<space><gt><space><apos>Rejected<space>Feature<space>Handling<apos><space>to<space><apos>Continue<space>Translation<apos>)
# -------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Determine the "NULL" device so we can ensure we don't get stray output
# messing up our stdout if we are running workspaces in the background
# See http://wiki.tcl.tk/1649 for a description of the tcl_platform
# variable, the "platform" part seems to have valid values windows, unix, and
# macintosh (the latter of which is actually pre-OS X)

Tcl2 if { $tcl_platform(platform) == {windows} } {         set ::null_device {NUL:};         set ::__WR_ENV_HELPER__ {};      } else {         set ::null_device {/dev/null};         set ::__WR_ENV_HELPER__ {/usr/bin/env FME_SUBPROCESS_RUN_DETACHED=1};      };
# ------------------------------------------------------------------------------
# Escape existing double quotes and then wrap in double quotes

Tcl2 proc quotifyForParameterFileV3 { sourceString } {   if {[string length $sourceString] == 0} {      return \"\";   };   set doQuote 0;   if {[string first { } $sourceString] != -1} {      set doQuote 1;   };   set sourceString [string map {{\"} {\\"}} $sourceString];   if {$doQuote == 1} {      set sourceString \\"$sourceString\\";   };   return $sourceString; };
# ------------------------------------------------------------------------------
# Main runner procedure, takes in a parameter list as string which is delimited
# by \x07 (BELL) character and the workspace to run

Tcl2 proc WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_runner { parmListString workspaceFile } {    global WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_commands;    global WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_batch_count;    incr WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_batch_count 0;    if { [info exists WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_commands] == 0 } {       set WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_commands {};    };    set workspaceFileUnix [regsub -all {\\} $workspaceFile {/}];    set parmListString [string range $parmListString 1 end-1];    set comment    {        Build up the command line in a list, which we'll write it out to a        parameter file.    };    set commandArguments {};    set commandArgumentsToLog {};    set workspaceToRun [quotifyForParameterFileV3 $workspaceFileUnix];    lappend commandArguments $workspaceToRun;    lappend commandArgumentsToLog $workspaceToRun;    set parameterList [split $parmListString \x07];    set parmTypes [split {TEXT} {,}];    foreach {parmName parmValue} $parameterList {parmType} $parmTypes {      set parmValue [quotifyForParameterFileV3 $parmValue];      lappend commandArguments --$parmName;      lappend commandArgumentsToLog --$parmName;      lappend commandArguments $parmValue;      if { [string first {PASSWORD} $parmType] != -1 } {           lappend commandArgumentsToLog {*********};      } else {           lappend commandArgumentsToLog $parmValue;      };    };    lappend WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_commands [join $commandArguments " "];    incr WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_batch_count;    if { {Yes} == {No} && {<Unused>} > 1  && $WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_batch_count <= {<Unused>} } {       FME_LogMessage fme_inform 933450 WorkspaceRunner $commandArgumentsToLog;    } else {       FME_LogMessage fme_inform 933451 WorkspaceRunner $commandArgumentsToLog;    };    if { {Yes} != {No} || $WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_batch_count == {<Unused>} } {       set WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_batch_count 0;       set commandFile [WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_writeCommandFile $WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_commands];       if { $commandFile == {} } {          return FAILURE;       };       set WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_commands {};       lappend cmdArgs {*}$::__WR_ENV_HELPER__ {$(FME_HOME_UNIX)/fme} COMMAND_FILE $commandFile;    } else {       return SUCCESS;    };    return [WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_runCommand $cmdArgs $workspaceFileUnix]; }
# ------------------------------------------------------------------------------
# When batching commands, any overflow commands will be run at the end. Say you
# batch by 2 and there are 5 incoming features. Then we will have 2 batches with
# 2 commands each and 1 overflow batch with 1 command

Tcl2 proc WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_flushPending { } {    global WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_commands;    if { [info exists WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_commands] == 1 && [llength $WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_commands] > 0 } {       set workspaceToRun [lindex $WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_commands 0];       set commandFile [WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_writeCommandFile $WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_commands];       if { $commandFile == {} } {          return FAILURE;       };       set WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_commands {};       lappend commandArguments {*}$::__WR_ENV_HELPER__ {$(FME_HOME_UNIX)/fme} COMMAND_FILE $commandFile;       return [WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_runCommand $commandArguments $workspaceToRun];    };    return SUCCESS; }
# ------------------------------------------------------------------------------
# Build and run the command

Tcl2 proc WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_runCommand {commandArguments workspaceFileUnix} {    if { {Yes} == {No} } {        lappend commandArguments \">$::null_device\";        lappend commandArguments \"<$::null_device\";    };    set comment    {        The below 2>@1 forces any standard error output to go into the msg variable        or to NULL if we're running in the background.    };    lappend commandArguments {2>@1};    if { {Yes} == {No} } {        lappend commandArguments {&};    };    if { {Yes} == {No} } {       after 1000;       while { [FME_CanSpawnFme <Unused>] == {0} } {             after 2000;       };    };    if { Yes == {No} && {<Unused>} > 1 } {       FME_LogMessage fme_inform 933452 WorkspaceRunner $commandArguments;    } else {       FME_LogMessage fme_inform 933453 WorkspaceRunner $commandArguments;    };    if {[catch {eval [concat exec $commandArguments] } msg ]} {       set msg [regsub {\015*\012child[^\012]*$} $msg {}];       FME_LogMessage fme_warn 933454 WorkspaceRunner $workspaceFileUnix "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return FAILURE;    } else {       global WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_process_count;       incr WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_process_count;       if { {Yes} == {No} } {           FME_LogMessage fme_inform 933455 WorkspaceRunner $workspaceFileUnix;           global WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_all_processes;           lappend WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_all_processes $msg;       } else {           FME_LogMessage fme_inform 933456 WorkspaceRunner $workspaceFileUnix;       };       return SUCCESS;    }; }
# ------------------------------------------------------------------------------
# Create and write commands to command file

Tcl2 proc WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_writeCommandFile { commands } {    set commandFile [FME_TempFilename wsr_cm_];    if { [catch { set cmdFileId [open $commandFile "w"] } msg ] } {       FME_LogMessage fme_warn 933457 WorkspaceRunner $commandFile "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return {};    };    fconfigure $cmdFileId -encoding utf-8;    puts $cmdFileId {#! encoding=\"utf-8\"};    puts $cmdFileId DELETE_FILE_AFTER_LOAD;    foreach {command} $commands {       puts $cmdFileId $command;    };    close $cmdFileId;    return $commandFile; }
# ------------------------------------------------------------------------------
# Use \x07 (BELL) character as the delimiter when writing WORKSPACE_PARAMETERS
# to mapping file
FACTORY_DEF * TestFactory    FACTORY_NAME WorkspaceRunner_ExecutorAndRouter    INPUT  FEATURE_TYPE StringPadder_OUTPUT    TEST @Tcl2("WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_runner {(watershed@EvaluateExpression(FDIV,STRING,<at>Value<openparen>_count<closeparen>,WorkspaceRunner))} {@EvaluateExpression(FDIV,STRING,$(FME_MF_DIR$encode)usgsgaugeReader.fmw,WorkspaceRunner)}") == SUCCESS    OUTPUT PASSED FEATURE_TYPE WorkspaceRunner_SUCCEEDED    OUTPUT FAILED FEATURE_TYPE WorkspaceRunner_FAILED
Tcl2 proc WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_summarizer { } {     global WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_process_count;     set comment { incr 0 creates the variable if it wasn't present };     incr WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_process_count 0;     FME_SetAttribute _proc_count [set WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_process_count];     global WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_all_processes;     if {[info exists WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_all_processes]} {         set index 0;         foreach pid [set WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_all_processes] {             FME_SetAttribute \"_processes{$index}\" $pid;             incr index;         }     } }
FACTORY_DEF * CreationFactory    FACTORY_NAME WorkspaceRunner_SummaryMaker    CREATE_AT_END yes    OUTPUT FEATURE_TYPE WorkspaceRunner_SUMMARY        @Tcl2(WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_flushPending)        @Tcl2(WorkspaceRunner_fb5c37aa_b9ea_4677_b41a_474c4a31aaf11_summarizer)

# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory    FACTORY_NAME Logger_Logger    INPUT  FEATURE_TYPE WorkspaceRunner_SUCCEEDED    INPUT  FEATURE_TYPE WorkspaceRunner_FAILED    INPUT  FEATURE_TYPE WorkspaceRunner_SUMMARY    OUTPUT FEATURE_TYPE Logger_LOGGED                  @Log(ENCODED, "Logger:<space>Feature is:","20","20","",INFO,LOG_ONLY,Logger_f0e590f9_efd1_43e1_83bf_e28dc9e73e2e1)

FACTORY_DEF * TeeFactory   FACTORY_NAME "Logger LOGGED Transformer Output Nuker"   INPUT FEATURE_TYPE Logger_LOGGED
# -------------------------------------------------------------------------

FACTORY_DEF * RoutingFactory FACTORY_NAME "Destination Feature Type Routing Correlator"   COMMAND_PARM_EVALUATION SINGLE_PASS   INPUT FEATURE_TYPE *   FEATURE_TYPE_ATTRIBUTE __wb_out_feat_type__   OUTPUT ROUTED FEATURE_TYPE *    OUTPUT NOT_ROUTED FEATURE_TYPE __nuke_me__ @Tcl2("FME_StatMessage 818059 [FME_GetAttribute fme_template_feature_type] 818060 818061 fme_warn")
# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory   FACTORY_NAME "Final Output Nuker"   INPUT FEATURE_TYPE __nuke_me__

